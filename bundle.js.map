{"version":3,"sources":["webpack:///webpack/bootstrap dabf7a9f322f928fa9cd","webpack:///./src/main.js","webpack:///./src/App.js","webpack:///./src/World.js","webpack:///./src/Tile.js","webpack:///./src/Agent.js","webpack:///./src/Area.js","webpack:///./src/Structure.js","webpack:///./src/Util.js","webpack:///./~/seedrandom/index.js","webpack:///./~/seedrandom/lib/alea.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/seedrandom/lib/xor128.js","webpack:///./~/seedrandom/lib/xorwow.js","webpack:///./~/seedrandom/lib/xorshift7.js","webpack:///./~/seedrandom/lib/xor4096.js","webpack:///./~/seedrandom/lib/tychei.js","webpack:///./~/seedrandom/seedrandom.js","webpack:///crypto (ignored)","webpack:///./src/Route.js","webpack:///./src/RenderEngine.js","webpack:///./src/Sprite.js"],"names":["main","app","window","addEventListener","onLoad","bind","onResize","DEBUG_MODE","ASSETS","SERVER_URL","LOCAL_SERVER_URL","RESOLUTION_SCALE","App","canvas","document","createElement","width","height","className","terrainSpriteSrc","pokemonSpriteSrc","playerSpriteSrc","clientID","debugCanvas","style","visibility","url","location","href","includes","seed","num_areas","params","split","tokens","setupWebsocket","setupGame","setupEventListeners","resolveParams","world","re","terrainSprite","playerSprite","pokemonSprite","event","me","getMe","keyCode","console","log","pos","getTile","x","y","move","sendEvent","message","update","delta","render","container","appendChild","body","setup","interval","setInterval","rerender","morph","debugRendered","ws","WebSocket","onopen","onWSOpen","onmessage","receiveEvent","type","data","m","id","send","JSON","stringify","e","parse","initWorld","init","itsAlive","addAgents","add","updateAgents","deleteAgents","delete","World","agents","areas","routes","size","grid","myID","agentID","parseInt","Array","i","defineNPAreas","defineAreas","defineAreaContent","defineNPContent","fillAreas","fillRoutes","repairWorld","j","padding","sx","Math","floor","random","sy","area","push","numAreas","areaCnt","stack","generateArea","route","prev","length","shift","num","len","dir","generateRoute","a2","route1","route2","newX","newY","newArea","outlets","ry","biome","drawRoute","rx","a1","pathRadius","del","a1x","a1y","abs","sign","c","npTile","traversable","uTile","undefined","spriteID","k","dTile","lTile","rTile","urTile","l","ulTile","brTile","blTile","tile","forEach","exclude","min_dist","closest","a","indexOf","dist","sqrt","pow","ntile","stile","wtile","etile","offset","offx","offy","needsRerender","valid","Object","keys","agent","inBound","waitThatWasntThereBeforeWTF","p","Tile","t","pokemon","Agent","Area","numHouses","pokemart","pokecenter","structures","neighbors","north","south","east","west","getRandomBiome","fill","resolveSprites","genEntryRoads","genPokecenter","genPokemart","genHouses","repairRoads","genTrees","repairTrees","genCacti","genDoodads","rand","treeSprite","roadSprite","pcSprite","bpcSprite","pmSprite","pondSprite","doodads","startx","starty","lw","rw","iterate","w","outlet","sdx","genRoadx","genRoady","px","py","r","s","locx","locy","rd","randomDisk","structure","nearest","findNearest","validStructureLocation","sizeRand","randChoice","o","connectRoads","genHouse","prob","makeTree","dx","dy","cx","Infinity","cy","spawnProb","doodad","choose","Structure","Util","randSeed","util","rng","seedrandom","b","randRange","sqrtrx","sqrtry","theta","PI","cos","sin","sumWeights","item","start","end","f","d","sd","min","max","x1","y1","x2","y2","Route","orientation","genObstacles","repairObstacles","genWalkable","genEncounterables","genHorizWalkable","assignHeights","genLedges","genPokemon","obstacleFill","encounterable","ledge","traverse","lerp","maxbx","minbx","maxby","minby","curve","clamp","rsq","randIntRange","belowTile","RenderEngine","ts","pls","pks","ctx","getContext","vpWidth","vpHeight","halfWidth","halfHeight","_renderTerrain","_renderAgents","_renderWorld","drawTile","spritePos","spriteSheet","tileHeight","tileWidth","canvasTileWidth","canvasTileHeight","canvasPosx","canvasPosy","drawImage","image","tmpCanvas","tmpCtx","TERRAIN_TILEMAP","POKE_TILEMAP","CHARACTER_TILEMAP","Sprite","src","h","onload","Image","clientWidth","clientHeight"],"mappings":"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AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;mCC3DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,YAAY;AAC9B;AACA,mBAAkB,YAAY;AAC9B;AACA,mBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B,sCAAsC;AACjE;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA,+CAA8C;AAC9C;;AAEA;AACA;;;AAGA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA,8BAA6B,mDAAmD;;;;;;;ACAhF;;;;;;;;mCCAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;;mCC9EA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,aAAa,aAAa;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;;mCCnFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,gBAAgB;AAC7B,wBAAuB;AACvB,wBAAuB;AACvB,wBAAuB;AACvB,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC,+BAA8B;;AAE9B;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;mCC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,+CAA8C;AAC9C,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,qCAAoC;AACpC,kCAAiC;AACjC;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;mCCjJA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD,iDAAqB,aAAa,EAAE;AACpC,EAAC;AACD;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;;ACpGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,gBAAgB,iBAAiB;;AAElE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,+BAA8B;AAC9B,2BAA0B;AAC1B,kBAAiB;AACjB,qBAAoB;AACpB;AACA,4BAA2B;AAC3B,cAAa;AACb,cAAa;AACb,gBAAe;AACf;AACA,wBAAuB;AACvB;;AAEA,4BAA2B,sBAAsB;AACjD,4BAA2B,gCAAgC;AAC3D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAwB,mBAAmB;AAC3C;AACA,oCAAmC,qBAAqB,EAAE;AAC1D;;AAEA;AACA;AACA,4BAA2B,sBAAsB,aAAa;;AAE9D;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,kBAAkB;;AAElC;AACA;AACA;AACA;AACA,cAAa,WAAW;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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dabf7a9f322f928fa9cd","import App from './App';\r\n\r\n\r\n(function main() {\r\n  let app = new App();\r\n  window.addEventListener('load', app.onLoad.bind(app));\r\n  window.addEventListener('resize', app.onResize.bind(app), false);\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import World from './World.js'\r\nimport RenderEngine from './RenderEngine.js'\r\nimport Sprite from './Sprite.js'\r\n\r\nwindow.DEBUG_MODE = 1;\r\nconst ASSETS = './assets';\r\nconst SERVER_URL = 'wss://davidliao.me:8000/play';\r\nconst LOCAL_SERVER_URL = 'ws://localhost:8000/play';\r\nconst RESOLUTION_SCALE = 3;\r\nexport default class App {\r\n  constructor () {\r\n    this.canvas = document.createElement('canvas'); // Aspect ratio of 3:2\r\n    this.canvas.width = 240 * RESOLUTION_SCALE;\r\n    this.canvas.height = 160 * RESOLUTION_SCALE;\r\n    this.canvas.className = 'viewport'\r\n    this.terrainSpriteSrc = `${ASSETS}/biomes.png`;\r\n    this.pokemonSpriteSrc = `${ASSETS}/pokemon.png`;\r\n    this.playerSpriteSrc = `${ASSETS}/player.png`;\r\n    this.clientID = -1; // default null value for client ID\r\n\r\n    if (window.DEBUG_MODE === 1) {\r\n      window.debugCanvas = document.createElement('canvas');\r\n      window.debugCanvas.width = 256;\r\n      window.debugCanvas.height = 256;\r\n      window.debugCanvas.className = 'debug-canvas'\r\n      window.debugCanvas.style.visibility = 'hidden';\r\n    }\r\n  }\r\n\r\n  resolveParams() {\r\n    let url = window.location.href;\r\n    if (!url.includes(\"?\")) {\r\n      this.seed = 0;\r\n      this.num_areas = 6;\r\n    }\r\n    else {\r\n      let params = url.split('?');\r\n      let tokens = params[1].split('&');\r\n      let seed = tokens[0].split('=');\r\n      let num_areas = tokens[1].split('=');\r\n      this.seed = seed[1];\r\n      this.num_areas = num_areas[1];\r\n    }\r\n  }\r\n\r\n  setup() {\r\n    this.setupWebsocket();\r\n    this.setupGame();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  setupGame() {\r\n    this.resolveParams();\r\n    this.world = new World(this.num_areas);\r\n    this.re = new RenderEngine(\r\n      this.canvas,\r\n      this.terrainSprite,\r\n      this.playerSprite,\r\n      this.pokemonSprite,\r\n      this.world);\r\n  }\r\n\r\n  setupEventListeners() {\r\n    window.addEventListener('keydown', (event) => {\r\n      let me = this.world.getMe();\r\n      switch (event.keyCode) {\r\n        case 32:\r\n          let style = window.debugCanvas.style;\r\n          style.visibility = style.visibility === 'visible' ? 'hidden' : 'visible';\r\n          console.log(me.pos, this.world.getTile(me.pos.x, me.pos.y));\r\n          break;\r\n        case 37:\r\n          me.move('left', this.world);\r\n          break;\r\n        case 38:\r\n          me.move('up', this.world);\r\n          break;\r\n        case 39:\r\n          me.move('right', this.world);\r\n          break;\r\n        case 40:\r\n          me.move('down', this.world);\r\n          break;\r\n      }\r\n      this.sendEvent('update', {\r\n        message: 'syncing shit',\r\n        update: {\r\n          delta: [me]\r\n        }\r\n      });\r\n      this.re.render();\r\n    });\r\n  }\r\n\r\n  onLoad() {\r\n    let container = document.createElement('div');\r\n    container.className = 'viewport-container';\r\n    container.appendChild(this.canvas);\r\n    document.body.appendChild(container);\r\n    if (window.DEBUG_MODE === 1) {\r\n      container.appendChild(window.debugCanvas);\r\n      document.body.appendChild(container);\r\n    }\r\n    // TODO: turn into Promise.All instead of callback chain\r\n    this.terrainSprite = new Sprite(this.terrainSpriteSrc, 16, 16, () => {\r\n      this.pokemonSprite = new Sprite(this.pokemonSpriteSrc, 64, 64, () => {\r\n        this.playerSprite = new Sprite(this.playerSpriteSrc, 25, 30, () => {\r\n          this.setup();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onResize() {\r\n\r\n  }\r\n\r\n  itsAlive() {\r\n      this.interval = setInterval(() => {\r\n        let rerender = this.world.morph();\r\n        if (rerender) {\r\n          this.re.render();\r\n          if (window.DEBUG_MODE === 1) {\r\n            this.re.debugRendered = false;\r\n          }\r\n        }\r\n      }, 20000);\r\n  }\r\n\r\n/**********************\r\n  WebSocket Shenanigans\r\n **********************/\r\n\r\n  setupWebsocket() {\r\n    this.ws = new WebSocket(SERVER_URL);\r\n    this.ws.onopen = this.onWSOpen.bind(this);\r\n    this.ws.onmessage = this.receiveEvent.bind(this);\r\n  }\r\n\r\n  onWSOpen() {\r\n    this.sendEvent('init', {message: 'initializing connection and awaiting id assignment'});\r\n  }\r\n\r\n  sendEvent(type, data) {\r\n    let m = {\r\n      type: type,\r\n      data: data,\r\n      id: this.clientID\r\n    }\r\n    this.ws.send(JSON.stringify(m));\r\n  }\r\n\r\n  receiveEvent(e) {\r\n    let { type, data, id } = JSON.parse(e.data);\r\n    switch (type) {\r\n      case 'init':\r\n        this.clientID = id;\r\n        this.world.initWorld(data.init.world, id);\r\n        this.itsAlive();\r\n        break;\r\n      case 'add':\r\n        this.world.addAgents(data.update.add);\r\n        break;\r\n      case 'update':\r\n        this.world.updateAgents(data.update.delta);\r\n        break;\r\n      case 'delete':\r\n        this.world.deleteAgents(data.update.delete);\r\n        break;\r\n      default:\r\n        console.log('event not handled', e.data);\r\n        return;\r\n    }\r\n    this.re.render();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","import Tile from './Tile.js'\r\nimport Agent from './Agent.js'\r\nimport Area from './Area.js'\r\nimport { util } from './Util.js'\r\nimport Route from './Route.js'\r\n\r\nexport default class World {\r\n  constructor(num_areas) {\r\n    this.agents = {};\r\n    this.areas = [];\r\n    this.routes = [];\r\n    this.num_areas = num_areas;\r\n  }\r\n\r\n  getTile(x, y) {\r\n    if (0 <= x && x < this.size && 0 <= y && y < this.size) {\r\n      return this.grid[x][y];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  initWorld(world, myID) {\r\n    let { agents, size, seed } = world;\r\n    this.me = myID;\r\n    for (let id in agents) {\r\n      let agentID = parseInt(id);\r\n      this.agents[agentID] = new Agent(agents[id]);\r\n    }\r\n\r\n    util.seed(seed);\r\n    this.size = size;\r\n\r\n    // creating grid[]\r\n    this.grid = new Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      this.grid[i] = new Array(size);\r\n    }\r\n\r\n    // creating areas\r\n    this.defineNPAreas();\r\n    this.defineAreas();\r\n    this.defineAreaContent();\r\n    this.defineNPContent();\r\n    this.fillAreas();\r\n    this.fillRoutes();\r\n    this.repairWorld();\r\n}\r\n\r\n  defineNPAreas() {\r\n    for (let i = 0; i < this.size; i++) {\r\n      for (let j = 0; j < this.size; j++) {\r\n        this.grid[i][j] = new Tile('0', false);\r\n      }\r\n    }\r\n  }\r\n\r\n  generateArea(x, y) {\r\n    let padding = 30;\r\n    let sx = Math.floor(util.random() * this.size / 16 + this.size / 16);\r\n    let sy = Math.floor(util.random() * this.size / 16 + this.size / 16);\r\n    while (x + sx/2 > this.size - padding || x - sx/2 < padding) {\r\n      sx = Math.floor(util.random() * this.size);\r\n    }\r\n    while (y + sy/2 > this.size - padding || y - sy/2 < padding) {\r\n      sy = Math.floor(util.random() * this.size);\r\n    }\r\n    sx += (sx % 2 === 0) ? 0 : 2 - (sx % 2);\r\n    sy += (sy % 3 === 0) ? 0 : 3 - (sy % 3);\r\n    let area = new Area(x, y, sx, sy, 3, true, true);\r\n    this.areas.push(area);\r\n    return area;\r\n  }\r\n\r\n  defineAreas() {\r\n    // init area\r\n    let numAreas = this.num_areas;\r\n    let areaCnt = 1;\r\n    let stack = [];\r\n    let area = this.generateArea(256, 256);\r\n\r\n    let route;\r\n    let prev;\r\n    stack.push(area);\r\n    while (stack.length !== 0) {\r\n      area = stack.shift();\r\n      let num = util.random();\r\n      // let num = 0;\r\n      if (num < 0.5) {\r\n        // one path\r\n        let len = Math.floor(util.random() * 64 + 32);\r\n        let dir = Math.floor(util.random() * 4);\r\n        while (area.prev === dir) {\r\n          dir = Math.floor(util.random() * 4);\r\n        }\r\n        switch(dir) {\r\n          case 0:\r\n            route = this.generateRoute(area, len, 'north');\r\n            route.a2.prev = 0;\r\n            break;\r\n          case 1:\r\n            route = this.generateRoute(area, len, 'south');\r\n            route.a2.prev = 1;\r\n            break;\r\n          case 2:\r\n            route = this.generateRoute(area, len, 'east');\r\n            route.a2.prev = 2;\r\n            break;\r\n          case 3:\r\n            route = this.generateRoute(area, len, 'west');\r\n            route.a2.prev = 3;\r\n            break;\r\n        }\r\n        this.routes.push(route);\r\n        areaCnt += 1;\r\n        if (areaCnt < numAreas) {\r\n          stack.push(route.a2);\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      else {\r\n        // two paths\r\n        // one path\r\n        let route1, route2;\r\n        let len = Math.floor(util.random() * 64 + 32);\r\n        if (area.prev === 2 || area.prev === 3) {\r\n          route1 = this.generateRoute(area, len, 'north');\r\n          route2 = this.generateRoute(area, len, 'south');\r\n          route1.a2.prev = 0;\r\n          route2.a2.prev = 1;\r\n        }\r\n        else {\r\n          route1 = this.generateRoute(area, len, 'east');\r\n          route2 = this.generateRoute(area, len, 'west');\r\n          route1.a2.prev = 2;\r\n          route2.a2.prev = 3;\r\n        }\r\n        this.routes.push(route1, route2);\r\n        areaCnt += 2;\r\n        if (areaCnt < numAreas) {\r\n          stack.push(route1.a2);\r\n          stack.push(route2.a2);\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateRoute(area, len, dir) {\r\n    let {x, y} = area;\r\n    let newX, newY, newArea, route;\r\n    switch(dir) {\r\n      case 'north':\r\n        while (area.y - len < 0) {\r\n          len = Math.floor(util.random() * len);\r\n        }\r\n        newX = x;\r\n        newY = y - len;\r\n        area.outlets.push({x: x, y: y - area.sy});\r\n        newArea = this.generateArea(newX, newY);\r\n        newArea.outlets.push({x: newX, y: newY + newArea.ry});\r\n        route = new Route(area, newArea, newArea.biome, 'v');\r\n        this.drawRoute(route, 'y');\r\n        break;\r\n      case 'south':\r\n        while (area.y + len > this.size) {\r\n          len = Math.floor(util.random() * len);\r\n        }\r\n        newX = x;\r\n        newY = y + len;\r\n        area.outlets.push({x: x, y: y + area.sy});\r\n        newArea = this.generateArea(newX, newY);\r\n        newArea.outlets.push({x: newX, y: newY - newArea.ry});\r\n        route = new Route(area, newArea, newArea.biome, 'v');\r\n        this.drawRoute(route, 'y');\r\n        break;\r\n      case 'east':\r\n        while (area.x + len > this.size) {\r\n          len = Math.floor(util.random() * len);\r\n        }\r\n        newX = x + len;\r\n        newY = y;\r\n        area.outlets.push({x: x + area.rx, y: y});\r\n        newArea = this.generateArea(newX, newY);\r\n        newArea.outlets.push({x: newX - newArea.rx, y: newY});\r\n        route = new Route(area, newArea, newArea.biome, 'h');\r\n        this.drawRoute(route, 'x');\r\n        break;\r\n      case 'west':\r\n        while (area.y - len < 0) {\r\n          len = Math.floor(util.random() * len);\r\n        }\r\n        newX = x - len;\r\n        newY = y;\r\n        area.outlets.push({x: x - area.rx, y: y});\r\n        newArea = this.generateArea(newX, newY);\r\n        newArea.outlets.push({x: newX + newArea.rx, y: newY});\r\n        route = new Route(area, newArea, newArea.biome, 'h');\r\n        this.drawRoute(route, 'x');\r\n        break;\r\n    }\r\n    return route;\r\n  }\r\n\r\n  // connect a1 to a2\r\n  drawRoute(route, dir) {\r\n    let {a1, a2} = route;\r\n    let pathRadius = 8;\r\n    let del;\r\n    let a1x = a1.x;\r\n    let a1y = a1.y;\r\n    if (dir === 'x') {\r\n      del = a2.x - a1.x;\r\n      for (let i = 0; i < Math.abs(del); i++) {\r\n        a1x += Math.sign(del);\r\n        for (let j = -pathRadius; j < pathRadius; j++) {\r\n          if (0 <= a1y + j && a1y + j < this.size) {\r\n            this.grid[a1x][a1y + j] = new Tile(route.biome, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      del = a2.y - a1.y;\r\n      for (let i = 0; i < Math.abs(del); i++) {\r\n        a1y += Math.sign(del);\r\n        for (let j = -pathRadius; j < pathRadius; j++) {\r\n          if (0 <= a1x + j && a1x + j < this.size) {\r\n            this.grid[a1x + j][a1y] = new Tile(route.biome, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  defineAreaContent() {\r\n    // draw cities\r\n    for (let c = 0; c < this.areas.length; c++) {\r\n      let area = this.areas[c];\r\n      for (let i = Math.floor(area.x - area.rx); i < area.x + area.rx; i++) {\r\n        for (let j = Math.floor(area.y - area.ry); j < area.y + area.ry; j++) {\r\n          if (0 <= i  && i < this.size && 0 <= j && j < this.size) {\r\n            this.grid[i][j] = new Tile(area.biome, true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  defineNPContent() {\r\n    for (let i = 0; i < this.size; i++) {\r\n      for (let j = 0; j < this.size; j++) {\r\n        // check if this is NP tile\r\n        let npTile = this.grid[i][j];\r\n        if (npTile.traversable === false && i + 1 < this.size && i - 1 >= 0) {\r\n          // check if this is a up, down, left, right\r\n          let uTile = this.grid[i][j-1];\r\n          if (uTile !== undefined && (uTile.spriteID === 'grass' || uTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 0, -1);\r\n            for (let k = 1; k < 5; k++) {\r\n              this.grid[i][j+k] = new Tile('mtn-d', false, 0, 0);\r\n            }\r\n            continue;\r\n          }\r\n          else if (uTile !== undefined && (uTile.spriteID === 'water')) {\r\n            // let rand = util.random();\r\n            this.grid[i][j] = new Tile('wtr-1', false);\r\n            for (let k = 1; k < 5; k++) {\r\n              this.grid[i][j+k] = new Tile('dwater', false);\r\n            }\r\n            continue;\r\n          }\r\n          let dTile = this.grid[i][j+1];\r\n          if (dTile !== undefined && (dTile.spriteID === 'grass' || dTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 0, 1);\r\n            for (let k = 1; k < 5; k++) {\r\n              this.grid[i][j-k] = new Tile('mtn-d', false, 0, 0);\r\n            }\r\n            continue;\r\n          }\r\n          else if (dTile !== undefined && (dTile.spriteID === 'water')) {\r\n            this.grid[i][j] = new Tile('wtr-1', false);\r\n            for (let k = 1; k < 5; k++) {\r\n              this.grid[i][j-k] = new Tile('dwater', false);\r\n            }\r\n            continue;\r\n          }\r\n          let lTile = this.grid[i-1][j];\r\n          if (lTile !== undefined && (lTile.spriteID === 'grass' || lTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, -1, 0);\r\n            for (let k = 1; k < 7; k++) {\r\n              this.grid[i+k][j] = new Tile('mtn-d', false, 0, 0);\r\n            }\r\n            continue;\r\n          }\r\n          else if (lTile !== undefined && (lTile.spriteID === 'water')) {\r\n            this.grid[i][j] = new Tile('wtr-1', false);\r\n            for (let k = 1; k < 7; k++) {\r\n              this.grid[i+k][j] = new Tile('dwater', false);\r\n            }\r\n            continue;\r\n          }\r\n\r\n          let rTile = this.grid[i+1][j];\r\n          if (rTile !== undefined && (rTile.spriteID === 'grass' || rTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 1, 0);\r\n            for (let k = 1; k < 7; k++) {\r\n              this.grid[i-k][j] = new Tile('mtn-d', false, 0, 0);\r\n            }\r\n            continue;\r\n          }\r\n          else if (rTile !== undefined && (rTile.spriteID === 'water')) {\r\n            this.grid[i][j] = new Tile('wtr-1', false);\r\n            for (let k = 1; k < 7; k++) {\r\n              this.grid[i-k][j] = new Tile('dwater', false);\r\n            }\r\n            continue;\r\n          }\r\n\r\n          // check for corners\r\n          let urTile = this.grid[i+1][j+1];\r\n          if (urTile !== undefined && (urTile.spriteID === 'grass' || urTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 2, -1);\r\n            // double for loop to fill in the 'rectangle'\r\n            for (let k = 0; k < 7; k++) {\r\n              for (let l = 0; l < 5; l++) {\r\n                if (i - k >= 0 && j - l >= 0 && this.grid[i-k][j-l].spriteID === '0') {\r\n                  this.grid[i-k][j-l] = new Tile('mtn-d', false, 0, 0);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          let ulTile = this.grid[i-1][j+1];\r\n          if (ulTile !== undefined && (ulTile.spriteID === 'grass' || ulTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 4, -1);\r\n            // double for loop to fill in the 'rectangle'\r\n            for (let k = 0; k < 7; k++) {\r\n              for (let l = 0; l < 5; l++) {\r\n                if (k === 0 && l === 0) {\r\n                  continue;\r\n                }\r\n                if (i + k < this.size && j - l >= 0 && this.grid[i+k][j-l].spriteID === '0') {\r\n                  this.grid[i+k][j-l] = new Tile('mtn-d', false, 0, 0);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          let brTile = this.grid[i+1][j-1];\r\n          if (brTile !== undefined && (brTile.spriteID === 'grass' || brTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 2, 1);\r\n            // double for loop to fill in the 'rectangle'\r\n            for (let k = 0; k < 7; k++) {\r\n              for (let l = 0; l < 5; l++) {\r\n                if (i - k >= 0 && j + l < this.size && this.grid[i-k][j+l].spriteID === '0') {\r\n                  this.grid[i-k][j+l] = new Tile('mtn-d', false, 0, 0);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          let blTile = this.grid[i-1][j-1];\r\n          if (blTile !== undefined && (blTile.spriteID === 'grass' || blTile.spriteID === 'sand')) {\r\n            this.grid[i][j] = new Tile('mtn-d', false, 4, 1);\r\n            // double for loop to fill in the 'rectangle'\r\n            for (let k = 0; k < 7; k++) {\r\n              for (let l = 0; l < 5; l++) {\r\n                if (k === 0 && l === 0) {\r\n                  continue;\r\n                }\r\n                if (i + k < this.size && j + l < this.size && this.grid[i+k][j+l].spriteID === '0') {\r\n                  this.grid[i+k][j+l] = new Tile('mtn-d', false, 0, 0);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillNPContent(tile, i, j) {\r\n\r\n  }\r\n\r\n  fillAreas() {\r\n    this.areas.forEach(area => {\r\n      area.init(this.grid);\r\n    });\r\n  }\r\n\r\n  fillRoutes() {\r\n    this.routes.forEach(route => {\r\n      route.init(this.grid);\r\n    });\r\n  }\r\n\r\n\r\n  findNearestArea(area, exclude) {\r\n    let {x, y, rx, ry} = area;\r\n    let min_dist = undefined;\r\n    let closest = undefined;\r\n    for (let i = 0; i < this.areas.length; i++) {\r\n      let a = this.areas[i];\r\n      if (a == area || exclude.indexOf(a) !== -1) {\r\n        continue;\r\n      }\r\n      let dist = Math.sqrt(Math.pow((a.x - x), 2) + Math.pow((a.y - y), 2));\r\n      if (dist < min_dist || min_dist === undefined) {\r\n        min_dist = dist;\r\n        closest = a;\r\n      }\r\n    }\r\n    return closest;\r\n  }\r\n\r\n  // avgDist defined by user\r\n  goodAvgDist(x, y) {\r\n    if (this.areas.length === 0) {\r\n      return true;\r\n    }\r\n    let a, min_dist, closest;\r\n    for (let i = 0; i < this.areas.length; i++) {\r\n      a = this.areas[i];\r\n      let dist = Math.sqrt(Math.pow((a.x - x), 2) + Math.pow((a.y - y), 2));\r\n      if (dist < min_dist || min_dist === undefined) {\r\n        min_dist = dist;\r\n        closest = a;\r\n      }\r\n    }\r\n    // calculate distance to closest area\r\n    let dist = Math.sqrt(Math.pow((closest.x - x), 2) + Math.pow((closest.y - y), 2));\r\n    if (dist >= 30) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  repairWorld() {\r\n    let { grid } = this;\r\n    for (let i = 1; i < this.size - 1; i++) {\r\n      for (let j = 1; j < this.size - 1; j++) {\r\n        let tile = grid[i][j];\r\n        let ntile = grid[i][j - 1];\r\n        let stile = grid[i][j + 1];\r\n        let wtile = grid[i - 1][j];\r\n        let etile = grid[i + 1][j];\r\n        if (tile.spriteID === 'sand') {\r\n          if (etile.spriteID === 'water' || etile.spriteID === 'R1') {\r\n            tile.spriteID = 'R1';\r\n          } else if (wtile.spriteID === 'water' || wtile.spriteID === 'R1') {\r\n            tile.spriteID = 'R1';\r\n          }\r\n          if (stile.spriteID === 'water' || stile.spriteID === 'R1') {\r\n            tile.spriteID = 'R1';\r\n          } else if (ntile.spriteID === 'water' || ntile.spriteID === 'R1') {\r\n            tile.spriteID = 'R1';\r\n          }\r\n        }\r\n\r\n        if (tile.spriteID === 'R1') {\r\n          tile.offset(1, 1);\r\n          if (grid[i + 1][j].spriteID === 'water') {\r\n            tile.offx += 1;\r\n          } else if (grid[i - 1][j].spriteID === 'water') {\r\n            tile.offx -= 1;\r\n          }\r\n          if (grid[i][j - 1].spriteID === 'water') {\r\n            tile.offy -= 1;\r\n          } else if (grid[i][j + 1].spriteID === 'water') {\r\n            tile.offy += 1;\r\n          }\r\n          if (grid[i + 1][j + 1].spriteID === 'water' && tile.offx === 1 && tile.offy === 1) {\r\n            tile.offset(2, -1);\r\n          } else if (grid[i + 1][j - 1].spriteID === 'water' && tile.offx === 1 && tile.offy === 1) {\r\n            tile.offset(2, -2);\r\n          } else if (grid[i - 1][j + 1].spriteID === 'water' && tile.offx === 1 && tile.offy === 1) {\r\n            tile.offset(1, -1);\r\n          } else if (grid[i - 1][j - 1].spriteID === 'water' && tile.offx === 1 && tile.offy === 1) {\r\n            tile.offset(1, -2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO: should we differentiate between agent types? :thinking:\r\n  addAgents(agents) {\r\n    agents.forEach(a => {\r\n      this.agents[a.id] = new Agent(a);\r\n    });\r\n  }\r\n\r\n  updateAgents(agents) {\r\n    agents.forEach(a => {\r\n      this.agents[a.id].update(a);\r\n    });\r\n  }\r\n\r\n  deleteAgents(agents) {\r\n    agents.forEach(a => {\r\n      delete this.agents[a.id];\r\n    });\r\n  }\r\n\r\n  getMe() {\r\n    return this.agents[this.me];\r\n  }\r\n\r\n  morph() {\r\n    let needsRerender = false;\r\n    this.routes.forEach(route => {\r\n      let valid = true;\r\n      Object.keys(this.agents).forEach(agent => {\r\n        let a = this.agents[agent];\r\n        valid &= !util.inBound(route.x - route.rx, a.pos.x, route.x + route.rx);\r\n        valid &= !util.inBound(route.y - route.ry, a.pos.y, route.y + route.ry);\r\n      });\r\n      if (valid && util.random() < route.waitThatWasntThereBeforeWTF) {\r\n        route.init(this.grid);\r\n        needsRerender = true;\r\n      }\r\n    });\r\n    this.areas.forEach(area => {\r\n      let valid = true;\r\n      Object.keys(this.agents).forEach(agent => {\r\n        let a = this.agents[agent];\r\n        valid &= !util.inBound(area.x - area.rx, a.pos.x, area.x + area.rx);\r\n        valid &= !util.inBound(area.y - area.ry, a.pos.y, area.y + area.ry);\r\n      });\r\n      if (valid && util.random() < area.waitThatWasntThereBeforeWTF) {\r\n        area.init(this.grid);\r\n        needsRerender = true;\r\n      }\r\n    });\r\n    return needsRerender;\r\n  }\r\n\r\n  serialize() {\r\n    let agents = [];\r\n    for (let p in this.agents) {\r\n      agents.push(this.agents[p]);\r\n    }\r\n    return {\r\n      agents: agents,\r\n      size: this.size,\r\n      seed: this.seed\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/World.js","export default class Tile {\n  constructor(spriteID, t, offx, offy) {\n  \tthis.spriteID = spriteID;\n  \tthis.pokemon = undefined;\n  \tthis.traversable = t;\n    this.offx = offx || 0;\n    this.offy = offy || 0;\n  }\n\n  offset(x, y) {\n    this.offx = x;\n    this.offy = y;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Tile.js","export default class Agent {\r\n  constructor(agent) {\r\n    this.update(agent);\r\n  }\r\n\r\n  move(dir, world) {\r\n    this.dir = dir;\r\n    switch(dir) {\r\n      case 'right':\r\n        if (this.pos.x + 1 < world.size\r\n          && world.getTile(this.pos.x+1, this.pos.y).traversable) {\r\n          this.pos.x += 1;\r\n        }\r\n        break;\r\n      case 'left':\r\n        if (this.pos.x - 1 >= 0\r\n          && world.getTile(this.pos.x-1, this.pos.y).traversable) {\r\n          this.pos.x -= 1;\r\n        }\r\n        break;\r\n      case 'up':\r\n        if (this.pos.y - 1 >= 0\r\n          && world.getTile(this.pos.x, this.pos.y-1).traversable) {\r\n          this.pos.y -= 1;\r\n        }\r\n        break;\r\n      case 'down':\r\n        if (this.pos.y + 1 < world.size\r\n          && world.getTile(this.pos.x, this.pos.y+1).traversable) {\r\n          this.pos.y += 1;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\n\r\n  moveTo(pos) {\r\n    this.pos.x = pos.x;\r\n    this.pos.y = pos.y;\r\n  }\r\n\r\n  update(agent) {\r\n    this.type = agent.type;\r\n    this.pos = agent.pos;\r\n    this.id = agent.id;\r\n    this.spriteID = agent.spriteID;\r\n    this.dir = agent.dir;\r\n  }\r\n\r\n  // Deprecated and replaced by `update` which handles deserializing -- David\r\n  serialize() {\r\n    return {\r\n      pos: {\r\n        x: this.pos.x,\r\n        y: this.pos.y\r\n      },\r\n      id: this.id,\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Agent.js","import Tile from './Tile.js'\nimport Structure from './Structure.js'\nimport { util } from './Util.js'\n\n\nexport default class Area {\n\tconstructor(x, y, sx, sy, numHouses, pokemart, pokecenter) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.sx = sx; // TODO: figure out if rx is radius or diameter\n\t\tthis.sy = sy;\n\t\tthis.rx = Math.floor(sx / 2);\n\t\tthis.ry = Math.floor(sy / 2);\n\t\tthis.numHouses = numHouses;\n\t\tthis.pokemart = pokemart;\n\t\tthis.pokecenter = pokecenter;\n\t\tthis.structures = [];\n\t\tthis.neighbors = {north: false, south: false, east: false, west: false};\n    this.outlets = [];\n\n\t\t// lol\n\t\tthis.waitThatWasntThereBeforeWTF = 0.1;\n\t\tthis.biome = this.getRandomBiome();\n\t}\n\n\tinit(grid) {\n\t\tthis.biome = this.getRandomBiome();\n\t\tthis.fill(grid);\n\t\tthis.resolveSprites(grid);\n\t\tif (['grass', 'water', 'snow'].includes(this.biome)) {\n\t\t\tthis.genEntryRoads(grid);\n\t\t}\n\t\tthis.genPokecenter(grid);\n\t\tthis.genPokemart(grid);\n\t\tthis.genHouses(grid);\n\t\tif (['grass', 'water', 'snow'].includes(this.biome)) {\n\t\t\tthis.repairRoads(grid);\n\t\t}\n\t\tif (['grass', 'snow'].includes(this.biome)) {\n\t\t\tthis.genTrees(grid);\n\t\t\tthis.repairTrees(grid);\n\t\t}\n\t\tif (this.biome === 'sand') {\n\t\t\tthis.genCacti(grid);\n\t\t\tthis.repairTrees(grid);\n\t\t}\n    this.genDoodads(grid);\n    // this.genPonds(grid); // TODO: improve algorithm\n\t}\n\n\tfill(grid) {\n\t\tfor (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n\t\t\tfor (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n\t\t\t\tgrid[i][j].spriteID = this.biome;\n\t\t\t\tgrid[i][j].offset(0,0);\n\t\t\t\tgrid[i][j].traversable = true;\n\t\t\t}\n\t\t}\n\t}\n\n  getRandomBiome() {\n    let rand = util.random();\n    if (rand < 0.25) {\n      return 'grass';\n    }\n    else if (rand < 0.50) {\n      return 'water';\n    }\n    else if (rand < 0.75) {\n      return 'sand';\n    }\n    else {\n      return 'snow';\n    }\n  }\n\n\tresolveSprites(grid) {\n\t\t// default values\n\t\tthis.treeSprite = 'T0';\n\t\tthis.roadSprite = 'R0';\n\t\tthis.pcSprite = 'PC';\n\t\tthis.bpcSprite = 'BPC';\n\t\tthis.pmSprite = 'PM';\n\t\tthis.pondSprite = 'W0';\n\t\tthis.doodads = ['D0', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7'];\n\n\t\tswitch (this.biome) {\n\t\t\tcase 'water':\n\t\t\t\tthis.treeSprite = 'T1';\n\t\t\t\tthis.roadSprite = 'R1';\n\t\t\t\tthis.doodads = ['DW0', 'DW1', 'DW2', 'DW3']\n\t\t\t\tbreak;\n\t\t\tcase 'snow':\n\t\t\t\tthis.treeSprite = 'T2';\n\t\t\t\tthis.roadSprite = 'R2';\n\t\t\t\tthis.pcSprite = 'PC1';\n\t\t\t\tthis.bpcSprite = 'BPC1';\n\t\t\t\tthis.pmSprite = 'PM1';\n\t\t\t\tthis.doodads = ['DS0', 'DS1', 'DS2', 'DS3'];\n\t\t\t\tbreak;\n\t\t\tcase 'sand':\n\t\t\t\tthis.treeSprite = 'T3';\n\t\t\t\t// this.roadSprite = 'sand';\n\t\t\t\tthis.doodads = ['DD0', 'DD1'];\n\t\t}\n\t}\n\n  genRoadx(grid, startx, starty, length, lw, rw) {\n    util.iterate(startx, startx + length, i => {\n      for (let w = -lw; w <= rw; w++) {\n        if (grid[i][starty + w].spriteID === this.biome) {\n          grid[i][starty + w] = new Tile(this.roadSprite, true, 1, 1);\n        }\n      }\n    });\n  }\n\n  genRoady(grid, startx, starty, length, lw, rw) {\n    util.iterate(starty, starty + length, i => {\n      for (let w = -lw; w <= rw; w++) {\n        if (grid[startx + w][i].spriteID === this.biome) {\n          grid[startx + w][i] = new Tile(this.roadSprite, true, 1, 1);\n        }\n      }\n    });\n  }\n\n\tgenEntryRoads(grid) {\n\t\tthis.outlets.forEach(outlet => {\n      let { x, y } = outlet;\n\t\t\tlet sdx = Math.sign(x - this.x);\n\t\t\tthis.genRoadx(grid, this.x + 2 * sdx, this.y, x - this.x, 2, 2);\n\t\t\tthis.genRoady(grid, x, this.y, y - this.y, 2, 2);\n\t\t});\n\t}\n\n  valid(grid, px, py) {\n    let r = 5;\n    for (let i = 0; i < this.structures.length; i++) {\n      let s = this.structures[i];\n      if (Math.abs(px - s.px) + Math.abs(py - s.py) < 1.5 * r) {\n        return false;\n      }\n    }\n    for (let i = px - r; i <= px + r; i++) {\n      for (let j = py - r; j <= py + r; j++) {\n        if (0 <= i && i < grid.length && 0 <= j && j < grid[0].length && grid[i][j].spriteID === this.roadSprite) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  validStructureLocation(grid) {\n    let px, py, locx, locy;\n    do {\n      let rd = util.randomDisk(this.rx / 1.3, this.ry / 1.3);\n      px = Math.floor(rd.px);\n      py = Math.floor(rd.py);\n      locx = this.x + px;\n      locy = this.y + py;\n    } while(!this.valid(grid, locx, locy))\n    return {locx, locy};\n  }\n\n  connectRoads(grid, locx, locy, structure) {\n\t\tif (!['grass', 'water', 'snow'].includes(this.biome)) {\n\t\t\treturn;\n\t\t}\n    let nearest = this.findNearest(this.roadSprite, locx, locy + structure.sy, grid);\n    this.genRoady(grid, locx, locy, structure.sy + 2, 1, 1); // protrude down a bit\n    locy += structure.sy;\n    this.genRoadx(grid, locx, locy, nearest.x - locx + 3 * Math.sign(nearest.x - locx), 1, 1);\n    locx = nearest.x + 1;\n    this.genRoady(grid, locx, locy, nearest.y - locy + 2 * Math.sign(nearest.y - locy), 1, 1);\n  }\n\n\tgenPokecenter(grid) {\n\t\tif (!this.pokecenter) {\n\t\t\treturn;\n\t\t}\n\n    let { locx, locy } = this.validStructureLocation(grid);\n\t\tlet sizeRand = util.random();\n\t\tlet structure = util.randChoice([\n\t\t\t{\n\t\t\t\tw: 3,\n\t\t\t\to: () => {return new Structure(this.pcSprite, locx, locy, 5, 5);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure(this.bpcSprite, locx, locy, 7, 5);}\n\t\t\t}\n\t\t])();\n    this.connectRoads(grid, locx, locy, structure);\n\t\tstructure.init(grid);\n\t\tthis.structures.push(structure);\n\t}\n\n\tgenPokemart(grid) {\n\t\tif (!this.pokemart) {\n\t\t\treturn;\n\t\t}\n\t\tlet { locx, locy } = this.validStructureLocation(grid);\n\t\tlet sizeRand = util.random();\n\t\tlet structure = new Structure(this.pmSprite, locx, locy, 4, 4);\n    this.connectRoads(grid, locx, locy, structure);\n\t\tstructure.init(grid);\n\t\tthis.structures.push(structure);\n\t}\n\n\tgenHouses(grid) {\n\t\tfor (let i = 0; i < this.numHouses; i++) {\n\t\t\tthis.genHouse(grid);\n\t\t}\n\t}\n\n\tgenHouse(grid) {\n    let { locx, locy } = this.validStructureLocation(grid);\n\t\tlet sizeRand = util.random();\n\t\tlet structure = util.randChoice([\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H0', locx, locy, 4, 4);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H1', locx, locy, 4, 4);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H2', locx, locy, 4, 4);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H3', locx, locy, 4, 4);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H4', locx, locy, 4, 4);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H5', locx, locy, 5, 5);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H6', locx, locy, 7, 5);}\n\t\t\t},\n\t\t\t{\n\t\t\t\tw: 1,\n\t\t\t\to: () => {return new Structure('H7', locx, locy, 5, 5);}\n\t\t\t},\n\t\t])();\n    this.connectRoads(grid, locx, locy, structure);\n\t\tstructure.init(grid);\n\t\tthis.structures.push(structure);\n\t}\n\n  genTrees(grid) {\n    let r = 5;\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n        let valid = true;\n        for (let x = i - r; x <= i + r; x++) {\n          for (let y = j - r; y <= j + r; y++) {\n            if ([this.roadSprite, 'H0', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', this.pcSprite, this.bpcSprite, this.pmSprite].includes(grid[x][y].spriteID)) {\n              valid = false;\n            }\n          }\n        }\n        if (valid && i % 2 === 0 && j % 3 === 0) {\n          grid[i][j].spriteID = this.treeSprite;\n          grid[i][j].traversable = false;\n        }\n      }\n    }\n  }\n\n\tgenCacti(grid) {\n\t\tlet r = 5;\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n\t\t\t\tlet prob = 0.05;\n        let valid = true;\n        for (let x = i - r; x <= i + r; x++) {\n          for (let y = j - r; y <= j + r; y++) {\n            if (['0', 'H0', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', this.pcSprite, this.bpcSprite, this.pmSprite].includes(grid[x][y].spriteID)) {\n              valid = false;\n            }\n          }\n        }\n        if (valid && i % 2 === 0 && j % 3 === 0 && util.random() < prob) {\n          grid[i][j].spriteID = this.treeSprite;\n          grid[i][j].traversable = false;\n        }\n      }\n    }\n\t}\n\n  repairTrees(grid) {\n    let makeTree = (i, j, dx, dy) => {\n      let t = grid[i + dx][j + dy];\n      t.spriteID = this.treeSprite;\n      t.offset(dx, dy);\n      t.traversable = false;\n    }\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n        let tile = grid[i][j];\n        if (tile.spriteID === this.treeSprite && tile.offx === 0 && tile.offy === 0) {\n          makeTree(i, j, 0, 1);\n          makeTree(i, j, 0, 2);\n          makeTree(i, j, 1, 0);\n          makeTree(i, j, 1, 1);\n          makeTree(i, j, 1, 2);\n        }\n      }\n    }\n  }\n\n  genPonds(grid) {\n    let r = 5;\n    let px = Math.floor(this.x + util.random() * this.sx - this.rx);\n    let py = Math.floor(this.y + util.random() * this.sy - this.ry);\n    let rx = 3;\n    let ry = 3;\n    let valid = true;\n    for (let i = px - rx - r; i <= px + rx + r; i++) {\n      for (let j = py - ry - r; j <= py + ry + r; j++) {\n        if ([this.roadSprite, 'H0', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', this.pcSprite, this.bpcSprite, this.pmSprite].includes(grid[i][j].spriteID)) {\n          valid = false;\n        }\n      }\n    }\n    if (valid) {\n      for (let i = px - rx; i <= px + rx; i++) {\n        for (let j = py - ry; j <= py + ry; j++) {\n          grid[i][j].spriteID = this.pondSprite;\n          grid[i][j].traversable = false;\n        }\n      }\n    }\n  }\n\n  repairPonds(grid) {\n\n  }\n\n  findNearest(spriteID, x, y, grid) {\n    let cx = Infinity;\n    let cy = Infinity;\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n        if (grid[i][j].spriteID === spriteID && (Math.abs(i - x) + Math.abs(j - y)) < (Math.abs(cx - x) + Math.abs(cy - y))) {\n          cx = i;\n          cy = j;\n        }\n      }\n    }\n    return {x: cx, y: cy};\n  }\n\n  repairRoads(grid) {\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n        let tile = grid[i][j];\n        if (tile.spriteID === this.roadSprite) {\n          tile.offset(1, 1);\n          if (grid[i + 1][j].spriteID !== this.roadSprite) {\n            tile.offx += 1;\n          } else if (grid[i - 1][j].spriteID !== this.roadSprite) {\n            tile.offx -= 1;\n          }\n          if (grid[i][j - 1].spriteID !== this.roadSprite) {\n            tile.offy -= 1;\n          } else if (grid[i][j + 1].spriteID !== this.roadSprite) {\n            tile.offy += 1;\n          }\n          if (grid[i + 1][j + 1].spriteID === this.biome && tile.offx === 1 && tile.offy === 1) {\n\t\t\t\t\t\ttile.offset(2, -1);\n          } else if (grid[i + 1][j - 1].spriteID === this.biome && tile.offx === 1 && tile.offy === 1) {\n\t\t\t\t\t\ttile.offset(2, -2);\n          } else if (grid[i - 1][j + 1].spriteID === this.biome && tile.offx === 1 && tile.offy === 1) {\n\t\t\t\t\t\ttile.offset(1, -1);\n          } else if (grid[i - 1][j - 1].spriteID === this.biome && tile.offx === 1 && tile.offy === 1) {\n\t\t\t\t\t\ttile.offset(1, -2);\n          }\n        }\n      }\n    }\n  }\n\n  genDoodads(grid) {\n    let r = 1;\n    for (let i = this.x - this.rx; i <= this.x + this.rx; i++) {\n      for (let j = this.y - this.ry; j <= this.y + this.ry; j++) {\n        let tile = grid[i][j];\n        if (tile.spriteID === this.biome) {\n          let rand = util.random();\n          let spawnProb = 0.01;\n          let neighbors = 0;\n\t\t\t\t\tlet valid = true;\n          for (let x = i - r; x <= i + r; x++) {\n            for (let y = j - r; y <= j + r; y++) {\n\t\t\t\t\t\t\tif (grid[x][y].spriteID === this.roadSprite) {\n\t\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\t}\n              if (grid[x][y].spriteID[0] === 'D') {\n                neighbors++;\n              }\n            }\n          }\n          spawnProb += Math.sqrt(neighbors) * 0.15;\n\n          if (valid && rand < spawnProb) {\n            let doodad = util.choose(this.doodads);\n            tile.spriteID = doodad;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Area.js","import Tile from './Tile.js'\n\nexport default class Structure {\n  constructor(spriteID, px, py, sx, sy) {\n    this.spriteID = spriteID;\n    this.px = px;\n    this.py = py;\n    this.sx = sx;\n    this.sy = sy;\n    this.offx = Math.floor(this.sx / 2);\n    this.offy = Math.floor(this.sy / 2);\n  }\n\n  init(grid) {\n    for (let i = 0; i < this.sx; i++) {\n      for (let j = 0; j < this.sy; j++) {\n        let x = Math.floor(this.px + i - this.offx);\n        let y = Math.floor(this.py + j - this.offy);\n        grid[x][y] = new Tile(this.spriteID, false, i, j);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Structure.js","import seedrandom from 'seedrandom'\n\nexport default class Util {\n  constructor() {\n    this.randSeed = 0;\n    window.util = this;\n  }\n\n  seed(seed) {\n    this.randSeed = seed + 7;\n    this.rng = new Math.seedrandom(this.randSeed);\n  }\n\n  randInt() {\n    return this.random() * 2147483647;\n  }\n\n  randRange(a, b) {\n    return this.random() * (b - a) + a;\n  }\n\n  randIntRange(a, b) {\n    return Math.floor(this.randRange(a, b));\n  }\n\n  random() {\n    return this.rng();\n  }\n\n  randomDisk(rx, ry) {\n    let sqrtrx = Math.sqrt(this.random());\n    let sqrtry = Math.sqrt(this.random());\n    let theta = this.random() * 2 * Math.PI;\n    let px = sqrtrx * Math.cos(theta) * rx;\n    let py = sqrtry * Math.sin(theta) * ry;\n    return {px, py};\n  }\n\n  /*\n  Randomly selects an object from a list given weights. Weights do not have to sum to 1.\n  Follows this parameter format:\n  [\n    {w: 3, o: choice1},\n    {w: 10, o: choice2},\n    ...\n  ]\n  Return: `o`\n  */\n  randChoice(l) {\n    let sumWeights = 0;\n    l.forEach(item => {\n      item.w += sumWeights;\n      sumWeights = item.w;\n    });\n    let rand = this.random() * sumWeights;\n    for (let i = 0; i < l.length; i++) {\n      if (rand < l[i].w) {\n        return l[i].o;\n      }\n    }\n  }\n\n  choose(l) {\n    return l[Math.floor(this.random() * l.length)];\n  }\n\n  /*\n  Iterates integers starting from `start` and finishes at `end` inclusively\n  and applies callback function `f`. The callback follows this signature:\n  f(i) {\n    ...\n  }\n\n  Return: undefined\n  */\n\n  iterate(start, end, f) {\n    let d = end - start;\n    let sd = Math.sign(d);\n    for (let i = 0; i < Math.abs(d); i++) {\n      f(start + i * sd);\n    }\n  }\n\n  clamp(min, x, max) {\n    return Math.min(Math.max(x, min), max);\n  }\n\n  inBound(min, x, max) {\n    return min <= x && x < max;\n  }\n\n  lerp(x1, y1, x2, y2, x) {\n    return y1 + (x - x1) * (y2 - y1) / (x2 - x1);\n  }\n}\n\nexport let util = new Util();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util.js","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/index.js\n// module id = 8\n// module chunks = 0","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/alea.js\n// module id = 9\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 10\n// module chunks = 0","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 11\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 12\n// module chunks = 0","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor128.js\n// module id = 13\n// module chunks = 0","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorwow.js\n// module id = 14\n// module chunks = 0","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorshift7.js\n// module id = 15\n// module chunks = 0","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor4096.js\n// module id = 16\n// module chunks = 0","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/tychei.js\n// module id = 17\n// module chunks = 0","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/seedrandom.js\n// module id = 18\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 19\n// module chunks = 0","import { util } from './Util.js'\nimport Tile from './Tile.js'\n\nexport default class Route {\n    constructor(a1, a2, biome, orientation) {\n        this.a1 = a1;\n        this.a2 = a2;\n        this.a1.height = 3; // TODO: mocked height;\n        this.a2.height = 0;\n        this.x = Math.floor((a1.x + a2.x) / 2);\n        this.y = Math.floor((a1.y + a2.y) / 2);\n        this.orientation = orientation;\n        if (orientation === 'v') {\n            this.sx = 16;\n            this.sy = Math.abs(a1.y - a2.y) - (a1.ry + a2.ry);\n            this.rx = Math.floor(this.sx / 2);\n            this.ry = Math.floor(this.sy / 2);\n        }\n        else {\n            this.sx = Math.abs(a1.x - a2.x) - (a1.rx + a2.rx);\n            this.sy = 16;\n            this.rx = Math.floor(this.sx / 2);\n            this.ry = Math.floor(this.sy / 2);\n        }\n        this.biome = biome; // TODO: mocked biome\n        this.sx += (this.sx % 2 === 0) ? 0 : 2 - (this.sx % 2);\n        this.sy += (this.sy % 3 === 0) ? 0 : 3 - (this.sy % 3);\n\n        this.waitThatWasntThereBeforeWTF = 0.1;\n    }\n\n    init(grid) {\n        this.resolveSprites();\n        if (this.orientation === 'v') {\n            this.genObstacles(grid);\n            this.repairObstacles(grid);\n            this.genWalkable(grid);\n            this.repairObstacles(grid);\n            this.genEncounterables(grid);\n        }\n        else {\n            this.genObstacles(grid);\n            this.repairObstacles(grid);\n            this.genHorizWalkable(grid);\n            this.repairObstacles(grid);\n            this.genEncounterables(grid);\n            this.genDoodads(grid);\n        }\n        this.assignHeights(grid);\n        this.genLedges(grid);\n        this.genPokemon(grid);\n    }\n\n    resolveSprites() {\n        switch(this.biome) {\n            case 'grass':\n                this.obstacleFill = 'OB0';\n                this.encounterable = 'EC0';\n                this.doodads = ['D0', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7'];\n                this.ledge = 'LG0';\n                break;\n            case 'snow':\n                this.obstacleFill = 'OBS';\n                this.encounterable = 'ECS';\n                this.doodads = ['DS0', 'DS1', 'DS2', 'DS3'];\n                this.ledge = 'LGS';\n                break;\n            case 'sand':\n                this.obstacleFill = 'OBD';\n                this.encounterable = 'ECD';\n                this.doodads = ['DD0', 'DD1'];\n                this.ledge = 'sand';\n                break;\n            case 'water':\n                this.obstacleFill = 'water';\n                this.encounterable = 'water';\n                this.doodads = ['DW0', 'DW1', 'DW2', 'DW3'];\n                this.ledge = 'water';\n                break;\n            default:\n                this.obstacleFill = 'OB0';\n                this.encounterable = 'EC0';\n                this.doodads = ['D0', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7'];\n                this.ledge = 'LG0';\n                break;\n        }\n    }\n\n    traverse(f) {\n        for (let i = this.x - this.rx + 1; i < this.x + this.rx; i++) {\n            for (let j = this.y - this.ry; j < this.y + this.ry; j++) {\n                f(i, j);\n            }\n        }\n    }\n\n    assignHeights(grid) {\n        this.traverse((i, j) => {\n            grid[i][j].height = Math.floor(util.lerp(this.y - this.ry, this.a1.height, this.y + this.ry, this.a2.height, j));\n        });\n    }\n\n    genObstacles(grid) {\n        this.traverse((i, j) => {\n            if (j % 2 === 0 && j !== 0) {\n                grid[i][j] = new Tile(this.obstacleFill, true);\n            }\n        });\n    }\n\n    repairObstacles(grid) {\n        this.traverse((i, j) => {\n            if (grid[i][j].spriteID === this.obstacleFill && grid[i][j].offy === 0) {\n                grid[i][j + 1] = new Tile(this.obstacleFill, true, 0, 1);\n            } else if (grid[i][j].spriteID === this.obstacleFill && grid[i][j].offy === 1) {\n                grid[i][j - 1] = new Tile(this.obstacleFill, true);\n            }\n        })\n    }\n\n    genWalkable(grid) {\n        let maxbx = this.x + this.rx;\n        let minbx = this.x - this.rx;\n        let maxby = this.y + this.ry;\n        let minby = this.y - this.ry;\n        let x = this.x, y;\n        // forward path\n        for (y = minby; y <= maxby; util.random() < 0.4 ? y : y++) {\n            let curve = util.random() * this.rx * Math.sin(y * 2 * Math.PI / 16);\n            x = util.clamp(minbx, Math.sign(curve) + x, maxbx - 1);\n            for (let i = -1; i <= 1; i++) {\n                for (let j = -1; j <= 1; j++) {\n                    if (minbx <= x + i && x + i < maxbx &&\n                            minby <= y + j && y + j <= maxby) {\n                                grid[x + i][y + j] = new Tile(this.biome, true);\n                    }\n                }\n            }\n        }\n        // backward path\n        for (y = minby; y <= maxby; util.random() < 0.4 ? y : y++) {\n            let curve = -util.random() * this.rx * Math.sin(y * 2 * Math.PI / 16);\n            x = util.clamp(minbx, Math.sign(curve) + x, maxbx - 1);\n            for (let i = -1; i <= 1; i++) {\n                for (let j = -1; j <= 1; j++) {\n                    if (minbx <= x + i && x + i < maxbx &&\n                            minby <= y + j && y + j <= maxby) {\n                                grid[x + i][y + j] = new Tile(this.biome, true);\n                    }\n                }\n            }\n        }\n    }\n\n    genHorizWalkable(grid) {\n        let maxbx = this.x + this.rx;\n        let minbx = this.x - this.rx;\n        let maxby = this.y + this.ry;\n        let minby = this.y - this.ry;\n        let y = this.y, x;\n\n        for (x = minbx; x <= maxbx; util.random() < 0.4 ? x : x++) {\n            let curve = util.random() * this.ry * Math.sin(x * 2 * Math.PI / 16);\n            y = util.clamp(minby, Math.sign(curve) + y, maxby - 1);\n            for (let i = -1; i <= 1; i++) {\n                for (let j = -1; j <= 1; j++) {\n                    if (minbx <= x + i && x + i < maxbx &&\n                            minby <= y + j && y + j <= maxby) {\n                                grid[x + i][y + j] = new Tile(this.biome, true);\n                    }\n                }\n            }\n        }\n\n        for (x = minbx; x <= maxbx; util.random() < 0.4 ? x : x++) {\n            let curve = -util.random() * this.ry * Math.sin(x * 2 * Math.PI / 16);\n            y = util.clamp(minby, Math.sign(curve) + y, maxby - 1);\n            for (let i = -1; i <= 1; i++) {\n                for (let j = -1; j <= 1; j++) {\n                    if (minbx <= x + i && x + i < maxbx &&\n                            minby <= y + j && y + j <= maxby) {\n                                grid[x + i][y + j] = new Tile(this.biome, true);\n                    }\n                }\n            }\n        }\n\n    }\n\n    genEncounterables(grid) {\n        let maxbx = this.x + this.rx;\n        let minbx = this.x - this.rx;\n        let maxby = this.y + this.ry;\n        let minby = this.y - this.ry;\n        for (let k = 0; k < 20; k++) {\n            let r = Math.floor(util.random() * 5) + 1;\n            let rsq = r * r;\n            let x = Math.floor(this.x + util.random() * this.sx - this.rx);\n            let y = Math.floor(this.y + util.random() * this.sy - this.ry);\n            for (let i = x - r; i <= x + r; i++) {\n                for (let j = y - r; j <= y + r; j++) {\n                    let tile = grid[i][j];\n                    if ((x - i) * (x - i) + (y - j) * (y - j) < rsq && tile.spriteID === this.biome &&\n                            util.inBound(minbx, i, maxbx) && util.inBound(minby, j, maxby)) {\n                        tile.spriteID = this.encounterable;\n                    }\n                }\n            }\n        }\n    }\n\n    genHorizEncounterables(grid) {\n        let maxbx = this.x + this.rx;\n        let minbx = this.x - this.rx;\n        let maxby = this.y + this.ry;\n        let minby = this.y - this.ry;\n        for (let k = 0; k < 20; k++) {\n            let r = Math.floor(util.random() * 5) + 1;\n            let rsq = r * r;\n            let x = Math.floor(this.x + util.random() * this.sx - this.rx);\n            let y = Math.floor(this.y + util.random() * this.sy - this.ry);\n            for (let i = x - r; i <= x + r; i++) {\n                for (let j = y - r; j <= y + r; j++) {\n                    let tile = grid[i][j];\n                    if ((x - i) * (x - i) + (y - j) * (y - j) < rsq && tile.spriteID === this.biome &&\n                            util.inBound(minbx, i, maxbx) && util.inBound(minby, j, maxby)) {\n                        tile.spriteID = this.encounterable;\n                    }\n                }\n            }\n        }\n    }\n\n\n    genDoodads(grid) {\n        this.traverse((i, j) => {\n            let tile = grid[i][j];\n            // spawn berries!!! omgggggg lawl\n            if (tile.spriteID === this.biome) {\n                if (util.random() < 0.01) {\n                    grid[i][j] = new Tile('D8', false, util.randIntRange(1, 4), 0);\n                }\n\n                let prob = 0.01;\n                let neighbors = 0;\n                for (let x = i - 1; x <= i + 1; x++) {\n                    for (let y = j - 1; y <= j + 1; y++) {\n                        if (grid[x][y].spriteID[0] === 'D') {\n                            neighbors++;\n                        }\n                    }\n                }\n                prob += Math.sqrt(neighbors) * 0.3;\n                if (util.random() < prob) {\n                    grid[i][j] = new Tile(util.choose(this.doodads), true);\n                }\n            }\n\n        });\n    }\n\n    genLedges(grid) {\n        this.traverse((i, j) => {\n            let tile = grid[i][j];\n            let belowTile = grid[i][j + 1];\n            if ([this.biome, this.encounterable].includes(tile.spriteID) &&\n                  [this.biome, this.encounterable].includes(belowTile.spriteID) && tile.height !== belowTile.height) {\n                let prob = 0.3;\n                let rand = util.random();\n                if (grid[i + 1][j].spriteID === this.ledge || grid[i - 1][j].spriteID === this.ledge) {\n                    rand = 0;\n                }\n\n                if (rand < prob) {\n                    tile.spriteID = this.ledge;\n                    tile.offx = 0;\n                    tile.offy = 0;\n                }\n            }\n        });\n    }\n\n    genPokemon(grid) {\n        // loop through cells of the route\n        for (let i = this.x - this.rx; i < this.x + this.rx; i++) {\n            for (let j = this.y - this.ry; j < this.y + this.ry; j++) {\n                    if (grid[i][j].spriteID === 'EC0' || grid[i][j].spriteID === 'ECS' || grid[i][j].spriteID === 'ECD' || grid[i][j].biome === 'water') {\n                        let rand = util.random();\n                        if (grid[i][j].spriteID === 'EC0' && this.biome === 'grass') {\n                            if (rand < 0.03) {\n                              grid[i][j].pokemon = 'g1';\n                            } else if (rand < 0.08) {\n                              grid[i][j].pokemon = 'g2';\n                            } else if (rand < 0.15) {\n                              grid[i][j].pokemon = 'g3';\n                            }\n                        }\n                        else if (grid[i][j].spriteID === 'ECD' && this.biome === 'sand') {\n                            if (rand < 0.03) {\n                              grid[i][j].pokemon = 's1';\n                            } else if (rand < 0.08) {\n                              grid[i][j].pokemon = 's2';\n                            } else if (rand < 0.1) {\n                              grid[i][j].pokemon = 's3';\n                            }\n                        }\n                        else if (grid[i][j].biome === 'water') {\n                            if (rand < 0.1) {\n                              grid[i][j].pokemon = 'w1';\n                            }\n                        }\n                        else {\n                            if (rand < 0.01) {\n                                grid[i][j].pokemon = 'i1';\n                            }\n                            else if (rand < 0.08) {\n                                grid[i][j].pokemon = 'i2';\n                            }\n                        }\n\n                    }\n            }\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Route.js","import Tile from './Tile.js'\nimport Sprite, { TERRAIN_TILEMAP, POKE_TILEMAP, CHARACTER_TILEMAP } from './Sprite.js'\n\nexport default class RenderEngine {\n  constructor(canvas, ts, pls, pks, world) {\n    // canvas is 960 x 640\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.world = world;\n    this.terrainSprite = ts;\n    this.playerSprite = pls;\n    this.pokemonSprite = pks;\n    // Viewport\n    this.vpWidth = 15;\n    this.vpHeight = 11;\n    this.halfWidth = Math.floor(this.vpWidth / 2);\n    this.halfHeight = Math.floor(this.vpHeight / 2);\n  }\n\n  render() {\n    this._renderTerrain();\n    this._renderAgents();\n    if (window.DEBUG_MODE === 1 && !this.debugRendered) {\n      this._renderWorld();\n    }\n  }\n\n  _renderTerrain() {\n    let { pos } = this.world.getMe();\n    for (let i = 0; i < this.vpWidth; i++) {\n      for (let j = 0; j < this.vpHeight; j++) {\n        let x = i + pos.x - this.halfWidth;\n        let y = j + pos.y - this.halfHeight;\n        let tile = this.world.getTile(x, y);\n        this.drawTile(tile, 'terrain', i, j);\n        if (tile.pokemon !== undefined) {\n          this.drawTile(tile, 'pokemon', i, j);\n        }\n      }\n    }\n  }\n\n  _renderAgents() {\n    let { agents } = this.world;\n    let me = this.world.getMe();\n    for (let a in agents) {\n      let agent = agents[a];\n      let tile = new Tile(agent.spriteID, true);\n      tile.spriteID = agent.spriteID;\n      switch (agent.dir) {\n        case 'right':\n          tile.offx = 1;\n          break;\n        case 'up':\n          tile.offx = 2;\n          break;\n        case 'left':\n          tile.offx = 3;\n          break;\n        default:\n          tile.offx = 0;\n      }\n      this.drawTile(tile, 'agent', agent.pos.x - me.pos.x + this.halfWidth, agent.pos.y - me.pos.y + this.halfHeight);\n    }\n  }\n\n  drawTile(tile, type, x, y) {\n    let spritePos, spriteSheet;\n    switch (type) {\n      case 'agent':\n        spritePos = CHARACTER_TILEMAP[tile.spriteID];\n        spriteSheet = this.playerSprite;\n        break;\n      case 'terrain':\n        spritePos = TERRAIN_TILEMAP[tile.spriteID];\n        spriteSheet = this.terrainSprite;\n        break;\n      case 'pokemon':\n        spritePos = POKE_TILEMAP[tile.pokemon];\n        spriteSheet = this.pokemonSprite;\n        break;\n    }\n    let { tileHeight, tileWidth } = spriteSheet;\n    let canvasTileWidth = this.canvas.width / this.vpWidth;\n    let canvasTileHeight = this.canvas.height / this.vpHeight;\n    let canvasPosx = x * canvasTileWidth;\n    let canvasPosy = y * canvasTileHeight;\n    let sx = spritePos.x + tile.offx * tileWidth;\n    let sy = spritePos.y + tile.offy * tileHeight;\n    this.ctx.drawImage(\n      spriteSheet.image,\n      sx, sy,\n      tileWidth, tileHeight,\n      canvasPosx, canvasPosy,\n      canvasTileWidth, canvasTileHeight\n    );\n  }\n\n  _renderWorld() {\n    // TODO: this needs to get refactored or i will cry\n    let { pos } = this.world.getMe();\n    let { grid } = this.world.grid;\n    let tmpCanvas = this.canvas;\n    let tmpCtx = this.ctx;\n    this.canvas = window.debugCanvas;\n    this.ctx = window.debugCanvas.getContext('2d');\n    this.vpWidth = window.debugCanvas.width * 2;\n    this.vpHeight = window.debugCanvas.height * 2;\n    this.halfWidth = Math.floor(this.vpWidth / 2);\n    this.halfHeight = Math.floor(this.vpHeight / 2);\n    for (let i = 0; i < this.world.size; i++) {\n      for (let j = 0; j < this.world.size; j++) {\n        let tile = this.world.getTile(i, j);\n        this.drawTile(tile, 'terrain', i, j);\n      }\n    }\n    this.debugRendered = true;\n    // reset values\n    this.vpWidth = 15;\n    this.vpHeight = 11;\n    this.halfWidth = Math.floor(this.vpWidth / 2);\n    this.halfHeight = Math.floor(this.vpHeight / 2);\n    this.canvas = tmpCanvas;\n    this.ctx = tmpCtx;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/RenderEngine.js","export const TERRAIN_TILEMAP = {\r\n  '0': {x: 0, y: 0},\r\n  'grass': {x: 0, y: 2 * 16}, // grass\r\n  'snow': {x: 144, y: 48}, // snow\r\n  'water': {x: 240, y: 1536}, // water\r\n  'dwater': {x: 96, y: 1536},\r\n  'DR': {x: 64, y: 224}, // dirt rock\r\n  'F': {x:0, y: 9 * 16}, // flower\r\n  'B': {x:16, y: 128}, // bush\r\n  'F2': {x:16, y: 192}, // more flowers\r\n  'sand': {x: 721, y: 48}, // sand\r\n  'SB': {x: 192, y: 112}, // snow bush\r\n  'WR': {x: 416, y: 128}, // water rock\r\n  'PC': {x: 416, y: 384},\r\n  'PC1': {x: 336, y: 384},\r\n  'BPC': {x: 224, y: 384},\r\n  'BPC1': {x: 112, y: 384},\r\n  'PM': {x: 560, y: 400},\r\n  'PM1': {x: 496, y: 400},\r\n  'H0': {x: 0, y: 544},\r\n  'H1': {x: 64, y: 544},\r\n  'H2': {x: 64 * 2, y: 544},\r\n  'H3': {x: 64 * 3, y: 544},\r\n  'H4': {x: 64 * 4, y: 544},\r\n  'H5': {x: 64 * 5, y: 544},\r\n  'H6': {x: 400, y: 544},\r\n  'H7': {x: 512, y: 544},\r\n  'R0': {x: 368, y: 32},\r\n  'R1': {x: 496, y: 224},\r\n  'R2': {x: 80, y: 32},\r\n  'R01': {x: 384, y: 0},\r\n  'T0': {x: 16, y: 144},\r\n  'T1': {x: 384, y: 224},\r\n  'T2': {x: 304, y: 144},\r\n  'T3': {x: 576, y: 144},\r\n  'W0': {x: 464, y: 32},\r\n  'mtn-d': {x: 432, y: 1328},\r\n  'mtn-s': {x: 1056, y: 1200},\r\n  'wtr-1': {x: 144, y: 1504},\r\n  'wtr-2': {x: 244, y: 1504},\r\n  'D0': {x: 0, y: 256},\r\n  'D1': {x: 0, y: 272},\r\n  'D2': {x: 0, y: 288},\r\n  'D3': {x: 48, y: 208},\r\n  'D4': {x: 64, y: 208},\r\n  'D5': {x: 80, y: 208},\r\n  'D6': {x: 96, y: 208},\r\n  'D7': {x: 16, y: 192},\r\n  'D8': {x: 48, y: 192},\r\n  'OB0': {x: 0, y: 208},\r\n  'OBS': {x: 752, y: 976},\r\n  'OBD': {x: 32, y: 1568},\r\n  'EC0': {x: 48, y: 32},\r\n  'ECS': {x: 192, y: 80},\r\n  'ECD': {x: 544, y: 96},\r\n  'LG0': {x: 384, y: 96},\r\n  'LGS': {x: 512, y: 1600},\r\n  'DW0': {x: 416, y: 128},\r\n  'DW1': {x: 464, y: 128},\r\n  'DW2': {x: 480, y: 128},\r\n  'DW3': {x: 496, y: 128},\r\n  'DS0': {x: 160, y: 128},\r\n  'DS1': {x: 176, y: 112},\r\n  'DS2': {x: 192, y: 112},\r\n  'DS3': {x: 192, y: 80},\r\n  'DD0': {x: 544, y: 96},\r\n  'DD1': {x: 560, y: 80},\r\n  // more to come...\r\n};\r\n\r\nexport const POKE_TILEMAP = {\r\n  'g1': {x: 0, y: 0},\r\n  'g2': {x: 64, y: 384},\r\n  'g3': {x: 384, y: 448},\r\n  's1': {x: 192, y: 0},\r\n  's2': {x: 192, y: 256},\r\n  's3': {x: 192, y: 768},\r\n  'w1': {x: 192, y: 320},\r\n  'i1': {x: 18 * 64, y: 5 * 64},\r\n  'i2': {x: 704, y: 896}\r\n};\r\n\r\nexport const CHARACTER_TILEMAP = {\r\n  'F': {x: 0, y: 0},\r\n};\r\n\r\nexport default class Sprite {\r\n  constructor(src, w, h, onload) {\r\n    this.image = new Image();\r\n    this.image.src = src;\r\n    this.image.onload = onload\r\n    this.tileWidth = w;\r\n    this.tileHeight = h;\r\n    this.width = this.image.clientWidth / this.tileWidth;\r\n    this.height = this.image.clientHeight / this.tileHeight;\r\n  }\r\n\r\n  getTile(x, y) {\r\n    return {x: x * this.width, y: y * this.height};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite.js"],"sourceRoot":""}